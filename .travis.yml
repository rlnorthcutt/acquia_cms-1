---
language: php

# The lowest version of PHP supported by all of Drupal, Acquia, and ORCA itself.
# @see https://www.drupal.org/docs/8/system-requirements/php-requirements
# @see https://docs.acquia.com/acquia-cloud/arch/tech-platform/
php: "7.3"

services:
  - mysql

addons:
  chrome: stable

cache:
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "${TMPDIR:-/tmp}/phpstan/cache"

env:
  # Change the following values for your implementation.
  global:
    - secure: "m+1H1ZD749fNdcwM8P5NrTr1jWIvd5J0EPDM88eNfXHB6tJBfL9C/Xe9OhHQC5gmYJE7fnFJhBOoSBWakVTme2Vn6XqlGluiLfpbPANgxYC3Wsli8QcyZKPSGvpWsdAvm5ai74T2DkwQUiFhPFSCPpt/0h3nWdjSkHCeoPvX6Qsrv5SiGboZKAiVZPks+mwBg+mIw9yx4w/SAIpmJceDuHNWOofD/Poq0W8SC2/pbbv85Xgt5mxDn+IrM1TSvDX9T+BQYc3Pu1M1Qak6BvuT5tbAlGSyxXl7Jt+uFrnqMI+bvhNgsJVUV1q10QwQI/wFHL/dnq3jtlQMyowdhtYBkwrYPsDXofuZPbC1Pi0sJ0c8yN5lpBvh/GxquoI3c/wCfLetqUI4mzxVWt8aYr0T4KzLg0dxI+do5pkaJAsQNVFjmzD7WLYcJJbgbzxnDZ12uzyGZfbSYuxVdO4g/XrDJaBSjfIpTuo0xFedm+P6DxfixklJ+Ufcvu+MhvqCN+bzrIw33b6Uaochv3gScsF1hQt7XyOe2vb7yqu9o5KnN2sfOk7YEMawTGBZwreusZP/9TmEyeqxIMs6JheApsbalnJvTkSxaxD3IXGQXxdfxkuPNppw7A/jirN6l7qkbQ2bZhL3+r9MT2wGdnDrUfxwwakqQvJuBB7HdFFJqzJw04E="
    # - COHESION_ARTIFACT=$TRAVIS_BUILD_DIR/tests/cohesion.tar.gz
    # Provide your package's name.
    - ORCA_SUT_NAME=acquia/acquia_cms
    # Specify the name of the nearest Git version branch, e.g., 1.x or 8.x-1.x.
    # This may be the destination branch of a pull request or the nearest
    # ancestor of a topic branch.
    - ORCA_SUT_BRANCH=develop
    # Specify the version of ORCA to use. Use dev-master to track the latest
    # release, dev-develop to track Dev/HEAD, or any other Composer version
    # string.
    # @see https://getcomposer.org/doc/articles/versions.md
    - ORCA_VERSION=dev-master
    # If your package isn't in in ORCA's packages.yml or conflicts with details
    # that are, you can modify the active packages configuration at runtime by
    # uncommenting the following line and specifying your own alter file.
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_PACKAGES_CONFIG_ALTER
    - ORCA_PACKAGES_CONFIG_ALTER=../acquia_cms/tests/packages_alter.yml
    # If your package is a Drupal installation profile, uncomment the following
    # line and specify its machine name.
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_FIXTURE_PROFILE
    - ORCA_FIXTURE_PROFILE=acquia_cms
    - ORCA_TELEMETRY_ENABLE=TRUE

# Execution time is drastically reduced by splitting the build into multiple
# concurrent jobs.
matrix:
  fast_finish: true
  include:
    - { env: ORCA_JOB=STATIC_CODE_ANALYSIS, name: "Static code analysis" }
    # Not relevant for Acquia CMS.
    #- { env: ORCA_JOB=INTEGRATED_TEST_ON_OLDEST_SUPPORTED, name: "Integrated test on oldest supported Drupal core version" }
    #- { env: ORCA_JOB=INTEGRATED_TEST_ON_LATEST_LTS, name: "Integrated test on latest LTS Drupal core version" }
    #- { env: ORCA_JOB=INTEGRATED_TEST_ON_PREVIOUS_MINOR, name: "Integrated test on previous minor Drupal core version" }
    #- { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_FROM_PREVIOUS_MINOR, name: "Integrated upgrade test from previous minor" }
    # This doesn't need to run on every commit.
    #- { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT, name: "Isolated test on current Drupal core version" }
    # To send PHPUnit test coverage data to Coveralls (coveralls.io), configure
    # your GitHub repository and uncomment the following line. The job on the
    # line immediately before is otherwise identical and can be removed. Note:
    # this setting implies ORCA_COVERAGE_ENABLE, which need not be set
    # separately.
    # @see https://github.com/acquia/orca/blob/master/docs/faq.md#coveralls
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_COVERALLS_ENABLE
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_COVERAGE_ENABLE
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERALLS_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
    #
    # To generate test coverage data to send somewhere other than Coveralls, use
    # the ORCA_COVERAGE_ENABLE variable instead.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERAGE_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
#    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT, name: "Integrated test on current Drupal core version" }
#    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR, name: "Integrated upgrade test to next minor Drupal core version" }
#    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV, name: "Integrated upgrade test to next minor dev Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV ORCA_CUSTOM_FIXTURE_INIT_ARGS="--no-sqlite", name: "Isolated test on current dev Drupal core version" }
    - { name: "Starter", env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV ORCA_CUSTOM_FIXTURE_INIT_ARGS="--no-sqlite"}
    - { name: "PubSec Demo", env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV ORCA_CUSTOM_FIXTURE_INIT_ARGS="--no-sqlite"}
#    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT_DEV, name: "Integrated test on current dev Drupal core version" }
#    - { env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN, name: "Loose deprecated code scan" }
#    - { env: ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN, name: "Strict deprecated code scan" }
#    - { env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB, name: "Deprecated code scan w/ contrib" }
#    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR, name: "Isolated test on next minor Drupal core version" }
#    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR, name: "Integrated test on next minor Drupal core version" }
#    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV, name: "Isolated test on next minor dev Drupal core version" }
#    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV, name: "Integrated test on next minor dev Drupal core version" }
    # Uncomment the following four lines to enable the corresponding tests once
    # the next major version of Drupal core has an alpha release or earlier.
    # Until then it's wasteful to use CI jobs on them, even if they exit early.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Isolated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Integrated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Isolated test on next major, latest minor dev Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Integrated test on next major, latest minor dev Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_BETA_OR_LATER, name: "Isolated upgrade test to next major beta-or-later Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV, name: "Isolated upgrade test to next major dev Drupal core version" }
  allow_failures:
    - env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV
    - env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN
    - env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV

# Install ORCA and prepare the environment.
before_install:
  - composer self-update 1.10.7
  - mysql -u root < ./tests/travis/install.sql
  - composer create-project --no-dev acquia/orca ../orca "$ORCA_VERSION"
  - composer self-update
  - ../orca/bin/travis/before_install.sh

# Create the test fixture and place the SUT.
install: ./tests/travis/install.sh

# Display details about the fixture.
before_script: ../orca/bin/travis/before_script.sh

# Run the test script.
script: ./tests/travis/script.sh

# Reserved for future use.
before_cache: ../orca/bin/travis/before_cache.sh

# Reserved for future use.
after_success: ../orca/bin/travis/after_success.sh

# Display debugging information in case of failure.
after_failure: ../orca/bin/travis/after_failure.sh

# Reserved for future use.
after_script: ../orca/bin/travis/after_script.sh
